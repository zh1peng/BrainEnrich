# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R-4.4-build

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read

jobs:
  build:
    if: contains(github.event.head_commit.message, 'ci-test')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        r-version: ['4.4.0']

    steps:
      - uses: actions/checkout@v4

      # Install system dependencies on Ubuntu
      - name: Install system dependencies on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libudunits2-dev

      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.r-version }}-{{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.r-version }}-
            ${{ runner.os }}-r-

      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck", "BiocManager"))
          remotes::install_deps(dependencies = TRUE)
          BiocManager::install("DOSE")
        shell: Rscript {0}

      - name: Check
        run: |
         if (!requireNamespace("ggseg", quietly = TRUE)) {
           options(repos = c(
                    ggseg = 'https://ggseg.r-universe.dev',
                    CRAN = 'https://cloud.r-project.org'))

                  # Install packages
                  install.packages('ggseg')
                }
           
           rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error")
        shell: Rscript {0}



